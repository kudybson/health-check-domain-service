CREATE TABLE ADDRESS
(
    ADDRESS_ID       Number(19) NOT NULL,
    CITY             VARCHAR(50) NOT NULL,
    HOUSE_NUMBER     VARCHAR(10) NOT NULL,
    APARTMENT_NUMBER VARCHAR(10),
    POSTAL_CODE      VARCHAR(10) NOT NULL,
    POST             VARCHAR(50) NOT NULL,
    COUNTY           VARCHAR(50) NOT NULL,
    PROVINCE         VARCHAR(50) NOT NULL,
    COUNTRY          VARCHAR(50) NOT NULL,
    STREET           VARCHAR(50),
    CONSTRAINT PK_ADDRESS PRIMARY KEY (ADDRESS_ID)
);

CREATE TABLE DEPARTMENT
(
    DEPARTMENT_ID Number(19) NOT NULL,
    NAME          VARCHAR(40) NOT NULL,
    ADDRESS_ID    INT         NOT NULL,
    CONSTRAINT PK_DEPARTMENT PRIMARY KEY (DEPARTMENT_ID),
    CONSTRAINT FK_ADDRESS_DEPARTMENT FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS (ADDRESS_ID)
);

CREATE TABLE PERSON
(
    PERSON_ID   RAW(16) NOT NULL,
    FIRST_NAME  VARCHAR(40) NOT NULL,
    SECOND_NAME VARCHAR(40) NOT NULL,
    CONSTRAINT PK_PERSON PRIMARY KEY (PERSON_ID)
);

CREATE TABLE DOCTOR
(
    DOCTOR_ID      RAW(16) NOT NULL,
    DEPARTMENT_ID  INT         NOT NULL,
    SPECIALIZATION VARCHAR(25) NOT NULL,
    CONSTRAINT PK_DOCTOR PRIMARY KEY (DOCTOR_ID),
    CONSTRAINT FK_PERSON_DOCTOR FOREIGN KEY (DOCTOR_ID) REFERENCES PERSON (PERSON_ID),
    CONSTRAINT FK_DEPARTMENT_DOCTOR FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID)
);

CREATE TABLE RECEPTIONIST
(
    RECEPTIONIST_ID RAW(16) NOT NULL,
    DEPARTMENT_ID   INT NOT NULL,
    CONSTRAINT PK_RECEPTIONIST PRIMARY KEY (RECEPTIONIST_ID),
    CONSTRAINT FK_PERSON_RECEPTIONIST FOREIGN KEY (RECEPTIONIST_ID) REFERENCES PERSON (PERSON_ID),
    CONSTRAINT FK_DEPARTMENT_RECEPTIONIST FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID)
);

CREATE TABLE PATIENT
(
    PATIENT_ID   RAW(16) NOT NULL,
    PESEL        VARCHAR(11) NOT NULL,
    PHONE_NUMBER VARCHAR(9)  NOT NULL,
    ADDRESS_ID   INT         NOT NULL,
    GENDER       VARCHAR2(10) NOT NULL,
    CONSTRAINT CHECK_GENDER CHECK (GENDER IN ('MALE', 'FEMALE')),
    CONSTRAINT PK_PATIENT PRIMARY KEY (PATIENT_ID),
    CONSTRAINT FK_PERSON_PATIENT FOREIGN KEY (PATIENT_ID) REFERENCES PERSON (PERSON_ID),
    CONSTRAINT FK_ADDRESS_PATIENT FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS (ADDRESS_ID)
);

CREATE TABLE TEST
(
    TEST_ID       Number(19) NOT NULL,
    PATIENT_ID    RAW(16) NOT NULL,
    DEPARTMENT_ID INT           NOT NULL,
    TYPE          VARCHAR(30)   NOT NULL,
    DESCRIPTION   VARCHAR(1000) NOT NULL,
    CONSTRAINT PK_TEST PRIMARY KEY (TEST_ID),
    CONSTRAINT FK_DEPARTMENT_TEST FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID),
    CONSTRAINT FK_PATIENT_TEST FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT (PATIENT_ID)
);

CREATE TABLE TEST_RESULT
(
    TEST_RESULT_ID Number(19) NOT NULL,
    TEST_ID        INT           NOT NULL,
    DESCRIPTION    VARCHAR(8000) NOT NULL,
    CONSTRAINT PK_TEST_RESULT PRIMARY KEY (TEST_RESULT_ID),
    CONSTRAINT FK_TEST_TEST_RESULT FOREIGN KEY (TEST_ID) REFERENCES TEST (TEST_ID)
);

CREATE TABLE ADMINISTRATOR
(
    ADMINISTRATOR_ID RAW(16) NOT NULL,
    DEPARTMENT_ID    Number(19) NOT NULL,
    CONSTRAINT PK_ADMINISTRATOR PRIMARY KEY (ADMINISTRATOR_ID),
    CONSTRAINT FK_PERSON_ADMINISTRATOR FOREIGN KEY (ADMINISTRATOR_ID) REFERENCES PERSON (PERSON_ID),
    CONSTRAINT FK_DEPARTMENT_ADMINISTRATOR FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID)
);

CREATE TABLE RATING
(
    RATING_ID   Number(19) NOT NULL,
    PATIENT_ID  RAW(16) NOT NULL,
    DOCTOR_ID   RAW(16) NOT NULL,
    GRADE       INT NOT NULL,
    DESCRIPTION VARCHAR(1000),
    CONSTRAINT PK_RATING PRIMARY KEY (RATING_ID),
    CONSTRAINT FK_PATIENT_RATING FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT (PATIENT_ID),
    CONSTRAINT FK_DOCTOR_RATING FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTOR (DOCTOR_ID)
);

CREATE TABLE SCHEDULE
(
    SCHEDULE_ID     Number(19) NOT NULL,
    DOCTOR_ID       RAW(16) NOT NULL,
    START_DATE_TIME DATE NOT NULL,
    END_DATE_TIME   DATE NOT NULL,
    CONSTRAINT PK_SCHEDULE PRIMARY KEY (SCHEDULE_ID),
    CONSTRAINT FK_DOCTOR_SCHEDULE FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTOR (DOCTOR_ID)
);

CREATE TABLE APPOINTMENT
(
    APPOINTMENT_ID   Number(19) NOT NULL,
    DOCTOR_ID        RAW(16) NOT NULL,
    PATIENT_ID       RAW(16) NOT NULL,
    DEPARTMENT_ID    INT  NOT NULL,
    APPOINTMENT_DATE DATE NOT NULL,
    COMMENTS         VARCHAR(8000),
    CABINET_NUMBER   INT  NOT NULL,
    CONSTRAINT PK_APPOINTMENT PRIMARY KEY (APPOINTMENT_ID),
    CONSTRAINT FK_DOCTOR_APPOINTMENT FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTOR (DOCTOR_ID),
    CONSTRAINT FK_PATIENT_APPOINTMENT FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT (PATIENT_ID),
    CONSTRAINT FK_DEPARTMENT_APPOINTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID)
);

CREATE TABLE TREATMENT
(
    TREATMENT_ID   Number(19) NOT NULL,
    APPOINTMENT_ID INT NOT NULL,
    DIAGNOSIS      VARCHAR(8000),
    RECOMMENDATION VARCHAR(8000),
    CONSTRAINT PK_TREATMENT PRIMARY KEY (TREATMENT_ID),
    CONSTRAINT FK_APPOINTMENT_TREATMENT FOREIGN KEY (APPOINTMENT_ID) REFERENCES APPOINTMENT (APPOINTMENT_ID)
);

CREATE TABLE PRESCRIPTION
(
    PRESCRIPTION_ID Number(19) NOT NULL,
    TREATMENT_ID    INT NOT NULL,
    CODE            VARCHAR(50),
    DESCRIPTION     VARCHAR(50),
    EXPIRATION_DATE DATE,
    CONSTRAINT PK_PRESCRIPTION PRIMARY KEY (PRESCRIPTION_ID),
    CONSTRAINT FK_TREATMENT_PRESCRIPTION FOREIGN KEY (TREATMENT_ID) REFERENCES TREATMENT (TREATMENT_ID)
);

CREATE TABLE REFERRAL
(
    REFERRAL_ID     Number(19) NOT NULL,
    TREATMENT_ID    INT         NOT NULL,
    TYPE            VARCHAR(50) NOT NULL,
    EXPIRATION_DATE DATE,
    CONSTRAINT PK_REFERRAL PRIMARY KEY (REFERRAL_ID),
    CONSTRAINT FK_TREATMENT_REFERRAL FOREIGN KEY (TREATMENT_ID) REFERENCES TREATMENT (TREATMENT_ID)
);

CREATE TABLE TEST_SCHEDULE
(
    TEST_SCHEDULE_ID     Number(19) NOT NULL,
    DEPARTMENT_ID    Number(19)     NOT NULL,
    TYPE          VARCHAR(30)   NOT NULL,
    START_DATE_TIME TIMESTAMP NOT NULL,
    END_DATE_TIME   TIMESTAMP NOT NULL,
    CONSTRAINT PK_TEST_SCHEDULE PRIMARY KEY (TEST_SCHEDULE_ID),
    CONSTRAINT FK_DEPARTMENT_TEST_SCHEDULE FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID)
);
CREATE SEQUENCE test_schedule_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

-- sequences
CREATE SEQUENCE address_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE appointment_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE department_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE prescription_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE rating_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE referral_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE schedule_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE test_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE test_result_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE treatment_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE test_schedule_seq START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

alter table APPOINTMENT modify APPOINTMENT_DATE timestamp;
alter table SCHEDULE modify START_DATE_TIME timestamp;
alter table SCHEDULE modify END_DATE_TIME timestamp;
alter table TEST add TEST_DATE timestamp;
alter table APPOINTMENT drop column CABINET_NUMBER;
alter table REFERRAL modify EXPIRATION_DATE timestamp;
alter table PRESCRIPTION modify EXPIRATION_DATE timestamp;
alter table PERSON rename column SECOND_NAME to LAST_NAME;


